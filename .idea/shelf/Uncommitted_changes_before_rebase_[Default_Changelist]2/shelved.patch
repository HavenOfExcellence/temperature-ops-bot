Index: main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from api_wrapper import TelegramApiWrapper\r\nfrom flask import Flask, request\r\nimport json\r\nimport logging\r\nimport lib.requests as requests\r\nimport re\r\nfrom datetime import datetime, timedelta\r\nfrom google.cloud import ndb\r\n\r\n# Configure logging\r\nlogging.basicConfig(\r\n    level=logging.INFO,\r\n    format='%(levelname)-8s :: (%(name)s) > %(message)s'\r\n)\r\n\r\n\r\n# load private API tokens from file\r\ndef loadTokens():\r\n    with open(\"tokens.json\") as tf:\r\n        tokens = json.load(tf)\r\n\r\n    return tokens\r\n\r\n\r\n# load strings from file\r\ndef loadStrings():\r\n    with open(\"strings.json\") as tf:\r\n        strings = json.load(tf)\r\n\r\n    return strings\r\n\r\n\r\nclass WebsiteStatus(ndb.Model):\r\n    status = ndb.BooleanProperty(default=True)\r\n\r\n\r\nclass Client(ndb.Model):\r\n    firstName = ndb.StringProperty()\r\n    status = ndb.StringProperty(default='0')\r\n    groupId = ndb.StringProperty()\r\n    groupName = ndb.StringProperty()\r\n    groupMembers = ndb.TextProperty()\r\n    memberName = ndb.StringProperty()\r\n    memberId = ndb.StringProperty()\r\n    pin = ndb.StringProperty()\r\n    temp = ndb.StringProperty()\r\n\r\n\r\napp = Flask(__name__)\r\nlogger = logging.getLogger(__name__)\r\n\r\ntokens = loadTokens()\r\nstrings = loadStrings()\r\ntelegramApi = TelegramApiWrapper(tokens[\"telegram-bot\"])\r\n\r\n#  this context will be used for the entire app instance\r\nndb_client = ndb.Client()\r\nwith ndb_client.context():\r\n    wstatus = WebsiteStatus.get_or_insert('status')\r\n\r\n\r\ndef generateTemperatures():\r\n    return [[str(x / 10), str((x + 1) / 10)] for x in range(355, 375, 2)]\r\n\r\n\r\ndef emojiTime(now):\r\n    hour = now.hour\r\n    minute = now.minute\r\n    clocks = strings[\"clocks\"]\r\n\r\n    return clocks[round(2 * (hour + minute / 60) % 24)]\r\n\r\n\r\ndef strftime(datetimeobject, formatstring):\r\n    formatstring = formatstring.replace(\"%%\", \"percent_placeholder\")\r\n    ps = list(set(re.findall(\"(%.)\", formatstring)))\r\n    format2 = \"|\".join(ps)\r\n    vs = datetimeobject.strftime(format2).split(\"|\")\r\n    for p, v in zip(ps, vs):\r\n        formatstring = formatstring.replace(p, v)\r\n    return formatstring.replace(\"percent_placeholder\", \"%\")\r\n\r\n\r\ndef submitTemp(client, temp):\r\n    now = datetime.now() + timedelta(hours=8)\r\n    if now.hour < 12:\r\n        meridies = 'AM'\r\n    else:\r\n        meridies = 'PM'\r\n    try:\r\n        url = 'https://temptaking.ado.sg/group/MemberSubmitTemperature'\r\n        payload = {\r\n            'groupCode': client.groupId,\r\n            'date': strftime(now, '%d/%m/%Y'),\r\n            'meridies': meridies,\r\n            'memberId': client.memberId,\r\n            'temperature': temp,\r\n            'pin': client.pin\r\n        }\r\n        r = requests.post(url, data=payload)\r\n    except:\r\n        # TODO: proper exception handling has to be done tbh\r\n        return 'error'\r\n    return r.text\r\n\r\n\r\n@app.route('/me')\r\ndef getMe():\r\n    resp = telegramApi.getMe()\r\n    return resp[\"result\"]\r\n\r\n\r\n@app.route('/setWebhook')\r\ndef getWebhook():\r\n    url = tokens[\"project-url\"] + \"webhook\"\r\n    resp = telegramApi.setWebhook(url)\r\n    if resp[\"ok\"]:\r\n        return \"webhook has been set to \" + url\r\n    else:\r\n        return \"webhook failed to set. DEBUG: \" + str(resp)\r\n\r\n\r\n@app.route('/websiteStatus')\r\ndef websiteStatus():\r\n    with ndb_client.context():\r\n        wstatus = WebsiteStatus.get_or_insert('status')\r\n        try:\r\n            requests.get(\"https://temptaking.ado.sg\")\r\n            if not wstatus.status:\r\n                wstatus.status = True\r\n                wstatus.put()\r\n                all_clients = Client.query().fetch(keys_only=True)\r\n                for client in all_clients:\r\n                    key_id = client.id()\r\n                    payload = {\r\n                        'chat_id': str(key_id),\r\n                        'text': strings[\"status_online\"]\r\n                    }\r\n                    telegramApi.sendMessage(payload)\r\n        except:\r\n            if wstatus.status:\r\n                wstatus.status = False\r\n                wstatus.put()\r\n                all_clients = Client.query().fetch(keys_only=True)\r\n                for client in all_clients:\r\n                    key_id = client.id()\r\n                    payload = {\r\n                        'chat_id': str(key_id),\r\n                        'text': strings[\"status_offline\"]\r\n                    }\r\n                    telegramApi.sendMessage(payload)\r\n        return 'ok'\r\n\r\n\r\n@app.route('/remind')\r\ndef remind():\r\n    with ndb_client.context():\r\n        wstatus = WebsiteStatus.get_or_insert('status')\r\n        all_clients = Client.query().fetch(keys_only=True)\r\n        for i in range(len(all_clients)):\r\n            client = all_clients[i]\r\n            key_id = client.id()\r\n            client = client.get()\r\n            now = datetime.now() + timedelta(hours=8)\r\n            if now.hour == 0 or now.hour == 12:\r\n                if client.status == 'endgame 1' or client.status == 'endgame 2':\r\n                    if client.temp != 'error':\r\n                        client.temp = 'none'\r\n            if client.temp == 'none':\r\n                if wstatus.status:\r\n                    temperatures = generateTemperatures()\r\n                    if now.hour < 12:\r\n                        text = strftime(now, strings[\"window_open_AM\"])\r\n                    else:\r\n                        text = strftime(now, strings[\"window_open_PM\"])\r\n                    payload = {\r\n                        'chat_id': str(key_id),\r\n                        'text': text,\r\n                        'reply_markup': {\r\n                            \"keyboard\": temperatures,\r\n                            \"one_time_keyboard\": True\r\n                        }\r\n                    }\r\n                    telegramApi.sendMessage(payload)\r\n                    client.status = 'endgame 2'\r\n            client.put()\r\n            return 'ok'\r\n\r\n\r\n@app.route('/broadcast', methods=[\"POST\"])\r\ndef broadcast():\r\n    with ndb_client.context():\r\n        all_clients = Client.query().fetch(keys_only=True)\r\n        for client in all_clients:\r\n            key_id = client.id()\r\n            payload = {\r\n                'chat_id': str(key_id),\r\n                'text': request.get_json()['msg'],\r\n                'parse_mode': 'HTML'\r\n            }\r\n            telegramApi.sendMessage(payload)\r\n        return 'broadcast sent to ' + str(len(all_clients)) + ' clients'\r\n\r\n\r\n@app.route('/webhook', methods=[\"POST\"])\r\ndef webhook():\r\n    with ndb_client.context():\r\n        body = request.get_json()\r\n        logging.info('request body:')\r\n        logging.info(body)\r\n        response = json.dumps(body)\r\n\r\n        update_id = body['update_id']\r\n        try:\r\n            message = body['message']\r\n        except:\r\n            message = body['edited_message']\r\n        message_id = message.get('message_id')\r\n        date = message.get('date')\r\n        text = message.get('text')\r\n        fr = message.get('from')\r\n        chat = message['chat']\r\n        chat_id = chat['id']\r\n        client = Client.get_or_insert(str(chat_id))\r\n\r\n        if client.firstName != fr:\r\n            client.firstName = fr\r\n            client.put()\r\n\r\n        # reply function used in context of this response only\r\n        def reply(msg=None, markup=None):\r\n            if msg:\r\n                if markup:\r\n                    payload = {\r\n                        'chat_id': str(chat_id),\r\n                        'text': msg,\r\n                        'reply_to_message_id': str(message_id),\r\n                        'reply_markup': markup,\r\n                        'parse_mode': 'HTML'\r\n                    }\r\n                else:\r\n                    payload = {\r\n                        'chat_id': str(chat_id),\r\n                        'text': msg,\r\n                        'reply_to_message_id': str(message_id),\r\n                        'parse_mode': 'HTML'\r\n                    }\r\n                resp = telegramApi.sendMessage(payload)\r\n            else:\r\n                logging.error('no msg specified')\r\n                resp = None\r\n            logging.info('send response:')\r\n            logging.info(resp)\r\n\r\n        # message function used in context of this response only\r\n        def message(msg=None, markup=None):\r\n            if msg:\r\n                if markup:\r\n                    payload = {\r\n                        'chat_id': str(chat_id),\r\n                        'text': msg,\r\n                        'reply_markup': markup,\r\n                        'parse_mode': 'HTML'\r\n                    }\r\n                else:\r\n                    payload = {\r\n                        'chat_id': str(chat_id),\r\n                        'text': msg,\r\n                        'parse_mode': 'HTML'\r\n                    }\r\n                resp = telegramApi.sendMessage(payload)\r\n            else:\r\n                logging.error('no msg specified')\r\n                resp = None\r\n            logging.info('send response:')\r\n            logging.info(resp)\r\n\r\n        def setGroupId(client, group_url):\r\n            group_string = 'temptaking.ado.sg/group'\r\n            if group_url.startswith(group_string):\r\n                group_url = 'https://' + group_url\r\n            if group_url.startswith('https://' + group_string) or group_url.startswith('http://' + group_string):\r\n                try:\r\n                    req_text = str(requests.get(group_url).content)\r\n                except:\r\n                    return 0\r\n                if 'Invalid code' in req_text:\r\n                    return -1\r\n\r\n                def urlParse(text):\r\n                    return text[text.find('{'):text.rfind('}') + 1]\r\n\r\n                parsed_url = json.loads(urlParse(req_text))\r\n                client.groupName = parsed_url[\"groupName\"]\r\n                client.groupId = parsed_url[\"groupCode\"]\r\n                client.groupMembers = json.dumps(parsed_url[\"members\"])\r\n                client.put()\r\n                return 1\r\n            else:\r\n                return -1\r\n\r\n        if text is None:\r\n            reply(strings[\"no_text_error\"])\r\n            return response\r\n\r\n        # force check website status before proceeding\r\n        wstatus = WebsiteStatus.get_or_insert('status')\r\n        if not wstatus.status:\r\n            message(strings[\"status_offline_response\"])\r\n            return response\r\n\r\n        if text.startswith('/'):\r\n            if text == '/start':\r\n                message(strings[\"SAF100\"])\r\n                client.status = '1'\r\n                client.temp = 'init'\r\n                client.put()\r\n                return response\r\n            elif text == '/forcesubmit':\r\n                if client.status == 'endgame 1':\r\n                    now = datetime.now() + timedelta(hours=8)\r\n                    temperatures = generateTemperatures()\r\n                    if now.hour < 12:\r\n                        msg = strftime(now, strings[\"window_open_AM\"])\r\n                    else:\r\n                        msg = strftime(now, strings[\"window_open_PM\"])\r\n                    markup = {\r\n                        \"keyboard\": temperatures,\r\n                        \"one_time_keyboard\": True\r\n                    }\r\n                    message(msg, markup)\r\n                    client.status = 'endgame 2'\r\n                    client.put()\r\n                    return response\r\n            reply(strings[\"invalid_input\"])\r\n\r\n        elif client.status == '1':\r\n            group_url = text\r\n            groupFlag = setGroupId(client, group_url)\r\n            if groupFlag == 1:\r\n                msg = strings[\"group_msg\"].format(client.groupName)\r\n                markup = {\r\n                    \"keyboard\": [\r\n                        [\r\n                            strings[\"group_keyboard_yes\"]\r\n                        ],\r\n                        [\r\n                            strings[\"group_keyboard_no\"]\r\n                        ]\r\n                    ],\r\n                    \"one_time_keyboard\": True\r\n                }\r\n                message(msg, markup)\r\n                client.status = '2'\r\n                client.put()\r\n            elif groupFlag == 0:\r\n                reply(strings[\"status_offline_response\"])\r\n            else:\r\n                reply(strings[\"invalid_url\"])\r\n            return response\r\n\r\n        elif client.status == '2':\r\n            if text == strings[\"group_keyboard_yes\"]:\r\n                gm = json.loads(client.groupMembers)\r\n                name_list = '\\n'.join(\r\n                    [str(i + 1) + '. ' + \"<b>{}</b>\".format(gm[i][\"identifier\"]) for i in range(len(gm))])\r\n                if len(gm) > 300 or len(strings[\"member_msg_1\"] + name_list) > 4096:\r\n                    message(strings[\"member_overflow\"].format(str(len(gm))))\r\n                else:\r\n                    msg = strings[\"member_msg_1\"] + name_list\r\n                    markup = {\r\n                        \"keyboard\": [[item[\"identifier\"]] for item in gm][0:300],\r\n                        \"one_time_keyboard\": True\r\n                    }\r\n                    message(msg, markup)\r\n                client.status = '3'\r\n                client.put()\r\n                return response\r\n            elif text == strings[\"group_keyboard_no\"]:\r\n                message(strings[\"SAF100_2\"])\r\n                client.status = '1'\r\n                client.put()\r\n                return response\r\n            else:\r\n                msg = strings[\"use_keyboard\"]\r\n                markup = {\r\n                    \"keyboard\": [\r\n                        [\r\n                            strings[\"group_keyboard_yes\"]\r\n                        ],\r\n                        [\r\n                            strings[\"group_keyboard_no\"]\r\n                        ]\r\n                    ],\r\n                    \"one_time_keyboard\": True\r\n                }\r\n                message(msg, markup)\r\n                return response\r\n\r\n        elif client.status == '3':\r\n            gm = json.loads(client.groupMembers)\r\n            try:\r\n                index = [obj[\"identifier\"] for obj in gm].index(text)\r\n                client.memberId = gm[index][\"id\"]\r\n                client.memberName = gm[index][\"identifier\"]\r\n                client.pin = str(gm[index][\"hasPin\"])  # if this is False, ask the user to set a pin later\r\n\r\n                msg = strings[\"member_msg_2\"].format(client.memberName)\r\n                markup = {\r\n                    \"keyboard\": [\r\n                        [\r\n                            strings[\"member_keyboard_yes\"]\r\n                        ],\r\n                        [\r\n                            strings[\"member_keyboard_no\"]\r\n                        ]\r\n                    ],\r\n                    \"one_time_keyboard\": True\r\n                }\r\n                message(msg, markup)\r\n                client.status = '4'\r\n            except ValueError:\r\n                # user input does not match any identifier\r\n                name_list = '\\n'.join(\r\n                    [str(i + 1) + '. ' + \"<b>{}</b>\".format(gm[i][\"identifier\"]) for i in range(len(gm))])\r\n                if len(gm) > 300 or len(strings[\"member_msg_1\"] + name_list) > 4096:\r\n                    reply(strings[\"member_overflow_wrong\"].format(text))\r\n                else:\r\n                    msg = strings[\"member_msg_1\"] + name_list\r\n                    markup = {\r\n                        \"keyboard\": [[item[\"identifier\"]] for item in gm],\r\n                        \"one_time_keyboard\": True\r\n                    }\r\n                    message(msg, markup)\r\n            client.put()\r\n            return response\r\n\r\n        elif client.status == '4':\r\n            if text == strings[\"member_keyboard_yes\"]:\r\n                if client.pin == 'False':\r\n                    msg = strings[\"set_pin_1\"].format(client.groupId)\r\n                    markup = {\r\n                        \"keyboard\": [\r\n                            [\r\n                                strings[\"pin_keyboard\"]\r\n                            ]\r\n                        ],\r\n                        \"one_time_keyboard\": True\r\n                    }\r\n                    message(msg, markup)\r\n                    client.pin = 'no pin'\r\n                else:\r\n                    message(strings[\"pin_msg_1\"])\r\n                    client.status = '5'\r\n                client.put()\r\n                return response\r\n            elif text == strings[\"member_keyboard_no\"]:\r\n                gm = json.loads(client.groupMembers)\r\n                name_list = '\\n'.join(\r\n                    [str(i + 1) + '. ' + \"<b>{}</b>\".format(gm[i][\"identifier\"]) for i in range(len(gm))])\r\n                if len(gm) > 300 or len(strings[\"member_msg_1\"] + name_list) > 4096:\r\n                    message(strings[\"member_overflow\"].format(str(len(gm))))\r\n                else:\r\n                    msg = strings[\"member_msg_3\"] + name_list\r\n                    markup = {\r\n                        \"keyboard\": [[item[\"identifier\"]] for item in gm],\r\n                        \"one_time_keyboard\": True\r\n                    }\r\n                    message(msg, markup)\r\n                client.status = '3'\r\n                client.put()\r\n                return response\r\n            elif text == strings[\"pin_keyboard\"]:  # triggered if user set pin after prompted to by bot\r\n                groupFlag = setGroupId(client, 'https://temptaking.ado.sg/group/{}'.format(client.groupId))\r\n                if groupFlag == 0:\r\n                    msg = strings[\"status_offline_response\"]\r\n                    markup = {\r\n                        \"keyboard\": [\r\n                            [\r\n                                strings[\"pin_keyboard\"]\r\n                            ]\r\n                        ],\r\n                        \"one_time_keyboard\": True\r\n                    }\r\n                    message(msg, markup)\r\n                else:\r\n                    # check that hasPin is now True\r\n                    gm = json.loads(client.groupMembers)\r\n                    try:\r\n                        index = [obj[\"identifier\"] for obj in gm].index(client.memberName)  # if this throws an\r\n                        # exception, it means the user has changed their name and is probably trying to break the bot\r\n                        client.memberId = gm[index][\"id\"]\r\n                        client.memberName = gm[index][\"identifier\"]\r\n                        client.pin = str(gm[index][\"hasPin\"])  # this should be true now\r\n\r\n                        if client.pin == 'False':\r\n                            msg = strings[\"set_pin_2\"].format(client.groupId)\r\n                            markup = {\r\n                                \"keyboard\": [\r\n                                    [\r\n                                        strings[\"pin_keyboard\"]\r\n                                    ]\r\n                                ],\r\n                                \"one_time_keyboard\": True\r\n                            }\r\n                            message(msg, markup)\r\n                            client.pin = 'no pin'\r\n                        else:\r\n                            message(strings[\"pin_msg_1\"])\r\n                            client.status = '5'\r\n                        client.put()\r\n                    except ValueError:\r\n                        # user is probably trying to break the bot\r\n                        message(strings[\"fatal_error\"])\r\n                        client.status = '1'\r\n                        client.temp = 'init'\r\n                        client.put()\r\n                    return response\r\n            else:\r\n                msg = strings[\"use_keyboard\"]\r\n                if client.pin == 'no pin':\r\n                    markup = {\r\n                        \"keyboard\": [\r\n                            [\r\n                                strings[\"pin_keyboard\"]\r\n                            ]\r\n                        ],\r\n                        \"one_time_keyboard\": True\r\n                    }\r\n                else:\r\n                    markup = {\r\n                        \"keyboard\": [\r\n                            [\r\n                                strings[\"member_keyboard_yes\"]\r\n                            ],\r\n                            [\r\n                                strings[\"member_keyboard_no\"]\r\n                            ]\r\n                        ],\r\n                        \"one_time_keyboard\": True\r\n                    }\r\n                message(msg, markup)\r\n                return response\r\n\r\n        elif client.status == '5':\r\n            p = re.compile(r'\\d{4}$').match(text)\r\n            if p is None:\r\n                reply(strings[\"invalid_pin\"])\r\n            else:\r\n                msg = strings[\"pin_msg_2\"].format(text)\r\n                markup = {\r\n                    \"keyboard\": [\r\n                        [\r\n                            strings[\"pin_keyboard_yes\"]\r\n                        ],\r\n                        [\r\n                            strings[\"pin_keyboard_no\"]\r\n                        ]\r\n                    ],\r\n                    \"one_time_keyboard\": True\r\n                }\r\n                message(msg, markup)\r\n                client.status = '6'\r\n                client.pin = text\r\n                client.put()\r\n            return response\r\n\r\n        elif client.status == '6':\r\n            if text == strings[\"pin_keyboard_yes\"]:\r\n                msg = strings[\"setup_summary\"].format(client.groupName, client.memberName, client.pin)\r\n                markup = {\r\n                    \"keyboard\": [\r\n                        [\r\n                            strings[\"summary_keyboard_yes\"],\r\n                            strings[\"summary_keyboard_no\"]\r\n                        ]\r\n                    ],\r\n                    \"one_time_keyboard\": True\r\n                }\r\n                message(msg, markup)\r\n                client.status = 'endgame 1'\r\n                client.groupMembers = ''  # flush datastore\r\n                client.put()\r\n                return response\r\n            elif text == strings[\"pin_keyboard_no\"]:\r\n                message(strings[\"pin_msg_3\"])\r\n                client.status = '5'\r\n                client.put()\r\n                return response\r\n            else:\r\n                msg = strings[\"use_keyboard\"]\r\n                markup = {\r\n                    \"keyboard\": [\r\n                        [\r\n                            strings[\"pin_keyboard_yes\"]\r\n                        ],\r\n                        [\r\n                            strings[\"pin_keyboard_no\"]\r\n                        ]\r\n                    ],\r\n                    \"one_time_keyboard\": True\r\n                }\r\n                message(msg, markup)\r\n                return response\r\n\r\n        elif client.status == 'endgame 1':\r\n            now = datetime.now() + timedelta(hours=8)\r\n            if text == strings[\"summary_keyboard_no\"]:\r\n                message(strings[\"SAF100\"])\r\n                client.status = '1'\r\n                client.temp = 'init'\r\n                client.put()\r\n                return response\r\n            # if the user doesn't enter summary_keyboard_no, we just assume they want to proceed\r\n            if client.temp == 'init':\r\n                if now.hour < 12:\r\n                    message(strftime(now, strings[\"new_user_AM\"]))\r\n                else:\r\n                    message(strftime(now, strings[\"new_user_PM\"]))\r\n                return response\r\n            else:\r\n                if now.hour < 12:\r\n                    message((strftime(now,\r\n                                      strings[\"already_submitted_AM\"]).format(client.temp)\r\n                             + strings[\"old_user_AM\"]))\r\n                else:\r\n                    message((strftime(now,\r\n                                      strings[\"already_submitted_PM\"]).format(client.temp)\r\n                             + strings[\"old_user_PM\"]))\r\n            return response\r\n\r\n        elif client.status == 'endgame 2':\r\n            p = re.compile(r'\\d{2}[.]\\d$').match(text)\r\n            if p is None:\r\n                temperatures = generateTemperatures()\r\n                msg = strings[\"invalid_temp\"]\r\n                markup = {\r\n                    \"keyboard\": temperatures,\r\n                    \"one_time_keyboard\": True\r\n                }\r\n                message(msg, markup)\r\n            else:\r\n                temp = float(text)\r\n                if temp >= 40.05 or temp <= 34.95:\r\n                    temperatures = generateTemperatures()\r\n                    msg = strings[\"temp_outside_range\"]\r\n                    markup = {\r\n                        \"keyboard\": temperatures,\r\n                        \"one_time_keyboard\": True\r\n                    }\r\n                    message(msg, markup)\r\n                else:\r\n                    resp = submitTemp(client, text)\r\n                    if resp == 'OK':\r\n                        client.temp = text\r\n                        now = datetime.now() + timedelta(hours=8)\r\n                        if now.hour < 12:\r\n                            message((strftime(now,\r\n                                              strings[\"just_submitted_AM\"]).format(emojiTime(now), client.temp)\r\n                                     + strings[\"old_user_AM\"]))\r\n                        else:\r\n                            message((strftime(now,\r\n                                              strings[\"just_submitted_PM\"]).format(emojiTime(now), client.temp)\r\n                                     + strings[\"old_user_PM\"]))\r\n                        client.status = 'endgame 1'\r\n                        client.groupMembers = ''  # flush datastore\r\n                        client.put()\r\n                    elif resp == 'Wrong pin.':\r\n                        message(strings[\"wrong_pin\"])\r\n                        client.status = 'wrong pin'\r\n                        client.temp = 'error'\r\n                        client.put()\r\n                    else:\r\n                        message(strings[\"temp_submit_error\"].format(client.groupId))\r\n                return response\r\n        elif client.status == 'wrong pin':\r\n            p = re.compile(r'\\d{4}$').match(text)\r\n            if p is None:\r\n                reply(strings[\"invalid_pin\"])\r\n            else:\r\n                msg = strings[\"pin_msg_2\"].format(text)\r\n                markup = {\r\n                    \"keyboard\": [\r\n                        [\r\n                            strings[\"pin_resubmit_temp\"]\r\n                        ],\r\n                        [\r\n                            strings[\"pin_keyboard_no\"]\r\n                        ]\r\n                    ],\r\n                    \"one_time_keyboard\": True\r\n                }\r\n                message(msg, markup)\r\n                client.status = 'resubmit temp'\r\n                client.pin = text\r\n                client.put()\r\n            return response\r\n        elif client.status == 'resubmit temp':\r\n            if text == strings[\"pin_resubmit_temp\"]:\r\n                temperatures = generateTemperatures()\r\n                msg = strings[\"select_temp\"]\r\n                markup = {\r\n                    \"keyboard\": temperatures,\r\n                    \"one_time_keyboard\": True\r\n                }\r\n                message(msg, markup)\r\n                client.status = 'endgame 2'\r\n                client.put()\r\n                return response\r\n            elif text == strings[\"pin_keyboard_no\"]:\r\n                message(strings[\"pin_msg_3\"])\r\n                client.status = 'wrong pin'\r\n                client.put()\r\n                return response\r\n            else:\r\n                msg = strings[\"use_keyboard\"]\r\n                markup = {\r\n                    \"keyboard\": [\r\n                        [\r\n                            strings[\"pin_resubmit_temp\"]\r\n                        ],\r\n                        [\r\n                            strings[\"pin_keyboard_no\"]\r\n                        ]\r\n                    ],\r\n                    \"one_time_keyboard\": True\r\n                }\r\n                message(msg, markup)\r\n                return response\r\n        else:\r\n            reply(strings[\"invalid_input\"])\r\n        return response\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- main.py	(revision e2348bce6e6e4f78c0854f83721399dbd10da048)
+++ main.py	(date 1587231190059)
@@ -14,6 +14,8 @@
 )
 
 
+# TODO: websiteStatus behaviour, proper exception handling
+
 # load private API tokens from file
 def loadTokens():
     with open("tokens.json") as tf:
@@ -176,6 +178,7 @@
                     payload = {
                         'chat_id': str(key_id),
                         'text': text,
+                        "parse_mode": "HTML",
                         'reply_markup': {
                             "keyboard": temperatures,
                             "one_time_keyboard": True
@@ -224,7 +227,7 @@
         client = Client.get_or_insert(str(chat_id))
 
         if client.firstName != fr:
-            client.firstName = fr
+            client.firstName = fr["first_name"]
             client.put()
 
         # reply function used in context of this response only
Index: cron.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>cron:\r\n#- description: \"hourly reminder\"\r\n#  url: /remind\r\n#  schedule: every 1 hours from 00:01 to 23:01\r\n#- description: \"test website\"\r\n#  url: /websiteStatus\r\n#  schedule: every 1 minutes
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cron.yaml	(revision e2348bce6e6e4f78c0854f83721399dbd10da048)
+++ cron.yaml	(date 1587228620027)
@@ -1,7 +1,7 @@
 cron:
-#- description: "hourly reminder"
-#  url: /remind
-#  schedule: every 1 hours from 00:01 to 23:01
-#- description: "test website"
-#  url: /websiteStatus
-#  schedule: every 1 minutes
\ No newline at end of file
+- description: "hourly reminder"
+  url: /remind
+  schedule: every 1 hours from 00:01 to 23:01
+- description: "test website"
+  url: /websiteStatus
+  schedule: every 1 minutes
\ No newline at end of file
Index: strings.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"status_online\": \"[Automated Message]\\n\\n<b>✅ temptaking.ado.sg is back online</b>\\n<i>You may now re-submit your previous request.</i>\",\r\n  \"status_offline\": \"[Automated Message]\\n\\n<b>❌ temptaking.ado.sg is offline again</b>\\n<i>Please defer all requests. I'll let you know when the website is back online.</i>\",\r\n  \"status_offline_response\": \"<b>❌ temptaking.ado.sg is offline, so I can't respond to your request right now.</b> I will let you know when you can try again.\",\r\n  \"window_open_AM\": \"<i>It's %H:%M on %A, %d/%m/%y</i>\\n<b>You are eligible for AM submission.</b>\\n\\nPlease enter your temperature in °C:\",\r\n  \"window_open_PM\": \"<i>It's %H:%M on %A, %d/%m/%y</i>\\n<b>You are eligible for PM submission.</b>\\n\\nPlease enter your temperature in °C:\",\r\n  \"select_temp\": \"Please enter your temperature in °C:\",\r\n  \"no_text_error\": \"This isn't a text message. Wake up your idea.\",\r\n  \"SAF100\": \"<b>⚠ You have been mobilised for Temperature Monitoring Ops.</b>\\nPlease enter your temptaking URL:\\n\\n<i>Format:</i>\\n<pre>temptaking.ado.sg/group/&lt;code&gt;</pre>\",\r\n  \"SAF100_2\": \"Please enter your temptaking URL again:\\n\\n<i>Format:</i>\\n<pre>temptaking.ado.sg/group/&lt;code&gt;</pre>\",\r\n  \"group_msg\": \"Group name: <b>{}</b>\",\r\n  \"group_keyboard_yes\": \"That's right\",\r\n  \"group_keyboard_no\": \"No it's not\",\r\n  \"invalid_url\": \"<b>❌ This isn't a valid temptaking URL</b>\\n\\n<i>Expected format:</i>\\n<pre>temptaking.ado.sg/group/&lt;code&gt;</pre>\",\r\n  \"use_keyboard\": \"Please choose a reply from this keyboard:\",\r\n  \"member_msg_1\": \"<i>Please enter your name:</i>\\n\",\r\n  \"member_msg_2\": \"Member name: <b>{}</b>\",\r\n  \"member_msg_3\": \"<i>Please enter your name again:</i>\\n\",\r\n  \"member_keyboard_yes\": \"That's me\",\r\n  \"member_keyboard_no\": \"I chose wrongly\",\r\n  \"member_overflow\": \"❗<b>This group has {} members</b>. That's too many for me to display.\\n\\nPlease type your name in <b><u>exactly</u></b> as it appears on the website:\",\r\n  \"member_overflow_wrong\": \"❌ <b>\\\"{}\\\" isn't a member of your group.</b>\\nWake up your idea and type your name correctly:\",\r\n  \"pin_msg_1\": \"Please enter your pin:\",\r\n  \"pin_msg_2\": \"You entered <b>{}</b> as your pin.\",\r\n  \"pin_msg_3\": \"Please enter your pin again:\",\r\n  \"set_pin_1\": \"<b>❗You have not set a pin yet.</b>\\nPlease set a pin <a href=\\\"https://temptaking.ado.sg/group/{}\\\">here</a>\",\r\n  \"set_pin_2\": \"<b>❗You still have not set a pin yet.</b>\\nPlease set a pin <a href=\\\"https://temptaking.ado.sg/group/{}\\\">here</a>\",\r\n  \"pin_keyboard\": \"I have a pin now\",\r\n  \"invalid_pin\": \"❌ <b>This isn't a valid pin.</b>\\nPlease enter your pin again:\\n\\n<i>Valid pin format: <code>0000</code></i>\",\r\n  \"wrong_pin\": \"‼ <b>You gave me the wrong pin. Wake up your idea.</b>\\n\\nPlease re-enter your pin:\",\r\n  \"pin_keyboard_yes\": \"I'm absolutely sure that's correct\",\r\n  \"pin_keyboard_no\": \"Nope, that's not my pin\",\r\n  \"pin_resubmit_temp\": \"Re-submit my temperature now\",\r\n  \"setup_summary\": \"✅ <b>Setup Completed</b>\\n\\nGroup: <b>{}</b>\\nName: <b>{}</b>\\nPin: <b>{}</b>\",\r\n  \"summary_keyboard_yes\": \"Looks good\",\r\n  \"summary_keyboard_no\": \"Restart setup\",\r\n  \"new_user_AM\": \"<i>It's %H:%M on %A, %d/%m/%y</i>\\nAs a new user, <b>you can start submitting temperatures this afternoon.</b>\\n\\nYou will be reminded (hourly, until you submit) to submit your temperature <b>from 12:01 onwards.</b>\\n\\n<i>To submit for the current window anyway, enter /forcesubmit\\nTo reset this bot, enter /start</i>\",\r\n  \"new_user_PM\": \"<i>It's %H:%M on %A, %d/%m/%y</i>\\nAs a new user, <b>you can start submitting temperatures tomorrow morning.</b>\\n\\nYou will be reminded (hourly, until you submit) to submit your temperature <b>from 00:01 onwards.</b>\\n\\n<i>To submit for the current window anyway, enter /forcesubmit\\nTo reset this bot, enter /start</i>\",\r\n  \"already_submitted_AM\": \"<b><i>%A, %d/%m/%y — AM</i></b>\\n\\n✅ You already submitted <b>{}°C</b>\\n\\n\",\r\n  \"already_submitted_PM\": \"<b><i>%A, %d/%m/%y — PM</i></b>\\n\\n✅ You already submitted <b>{}°C</b>\\n\\n\",\r\n  \"just_submitted_AM\": \"<b><i>%A, %d/%m/%y — AM</i></b>\\n\\n<b>{} %H:%M\\n\\uD83C\\uDF21 {}°C</b>\\n\\n✅ Submitted successfully\\n\\n\",\r\n  \"just_submitted_PM\": \"<b><i>%A, %d/%m/%y — PM</i></b>\\n\\n<b>{} %H:%M\\n\\uD83C\\uDF21 {}°C</b>\\n\\n✅ Submitted successfully\\n\\n\",\r\n  \"old_user_AM\": \"<i>To re-submit, enter /forcesubmit\\nTo reset this bot, enter /start</i>\",\r\n  \"old_user_PM\": \"<i>To re-submit, enter /forcesubmit\\nTo reset this bot, enter /start</i>\",\r\n  \"invalid_temp\": \"❌ <b>This isn't a valid temperature.</b>\\nPlease re-enter your temperature in °C:\\n\\n<i>Valid temperature format: <code>00.0</code></i>\",\r\n  \"temp_outside_range\": \"❌ <b>This isn't a valid temperature.</b>\\nPlease re-enter your temperature in °C:\\n\\n<i>Valid temperature range: <code>35.0 — 40.0</code></i>\",\r\n  \"invalid_input\": \"\\uD83D\\uDC7A <b>This isn't a valid request.</b>\\n\\nWake up your idea.\",\r\n  \"temp_submit_error\": \"<b>An unknown error occurred while submitting your temperature.</b>\\n\\nPlease use <a href=\\\"https://temptaking.ado.sg/group/{}\\\">the website</a> to submit your temperature.\\n\\n<i>To try re-submitting, enter /forcesubmit.\\nTo reset this bot at any time, enter /start.</i>\",\r\n  \"fatal_error\": \"\\uD83D\\uDC80 <b>A fatal error occurred.</b>\\n\\nPlease restart the setup by entering your temptaking URL:\\n\\n<i>Format:</i>\\n<pre>temptaking.ado.sg/group/&lt;code&gt;</pre>\",\r\n  \"clocks\": [\"\uD83D\uDD5B\", \"\uD83D\uDD67\", \"\uD83D\uDD50\", \"\uD83D\uDD5C\", \"\uD83D\uDD51\", \"\uD83D\uDD5D\", \"\uD83D\uDD52\", \"\uD83D\uDD5E\", \"\uD83D\uDD53\", \"\uD83D\uDD5F\", \"\uD83D\uDD54\", \"\uD83D\uDD60\", \"\uD83D\uDD55\", \"\uD83D\uDD61\", \"\uD83D\uDD56\", \"\uD83D\uDD62\", \"\uD83D\uDD57\", \"\uD83D\uDD63\", \"\uD83D\uDD58\", \"\uD83D\uDD64\", \"\uD83D\uDD59\", \"\uD83D\uDD65\", \"\uD83D\uDD5A\", \"\uD83D\uDD66\"]\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- strings.json	(revision e2348bce6e6e4f78c0854f83721399dbd10da048)
+++ strings.json	(date 1587229350514)
@@ -36,8 +36,8 @@
   "summary_keyboard_no": "Restart setup",
   "new_user_AM": "<i>It's %H:%M on %A, %d/%m/%y</i>\nAs a new user, <b>you can start submitting temperatures this afternoon.</b>\n\nYou will be reminded (hourly, until you submit) to submit your temperature <b>from 12:01 onwards.</b>\n\n<i>To submit for the current window anyway, enter /forcesubmit\nTo reset this bot, enter /start</i>",
   "new_user_PM": "<i>It's %H:%M on %A, %d/%m/%y</i>\nAs a new user, <b>you can start submitting temperatures tomorrow morning.</b>\n\nYou will be reminded (hourly, until you submit) to submit your temperature <b>from 00:01 onwards.</b>\n\n<i>To submit for the current window anyway, enter /forcesubmit\nTo reset this bot, enter /start</i>",
-  "already_submitted_AM": "<b><i>%A, %d/%m/%y — AM</i></b>\n\n✅ You already submitted <b>{}°C</b>\n\n",
-  "already_submitted_PM": "<b><i>%A, %d/%m/%y — PM</i></b>\n\n✅ You already submitted <b>{}°C</b>\n\n",
+  "already_submitted_AM": "<b><i>%A, %d/%m/%y — AM</i></b>\n\n✅ You already submitted <b>{}°C</b>\n\nYour next submission window opens this afternoon.\n\n",
+  "already_submitted_PM": "<b><i>%A, %d/%m/%y — PM</i></b>\n\n✅ You already submitted <b>{}°C</b>\n\nYour next submission window opens tomorrow morning.\n\n",
   "just_submitted_AM": "<b><i>%A, %d/%m/%y — AM</i></b>\n\n<b>{} %H:%M\n\uD83C\uDF21 {}°C</b>\n\n✅ Submitted successfully\n\n",
   "just_submitted_PM": "<b><i>%A, %d/%m/%y — PM</i></b>\n\n<b>{} %H:%M\n\uD83C\uDF21 {}°C</b>\n\n✅ Submitted successfully\n\n",
   "old_user_AM": "<i>To re-submit, enter /forcesubmit\nTo reset this bot, enter /start</i>",
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"BranchesTreeState\">\r\n    <expand>\r\n      <path>\r\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"LOCAL_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n      </path>\r\n      <path>\r\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"REMOTE_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n      </path>\r\n      <path>\r\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"REMOTE_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"GROUP_NODE:origin\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n      </path>\r\n    </expand>\r\n    <select />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"09fab2e2-bcb4-4c44-8aa4-9ec3b4c7ea10\" name=\"Default Changelist\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/main.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/main.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/strings.json\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/strings.json\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"1YZvRcB49ELNySR0TNWnkwu9DDE\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"ASKED_ADD_EXTERNAL_FILES\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$/../thermobot-2\" />\r\n    <property name=\"settings.editor.selected.configurable\" value=\"com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Markus\\PycharmProjects\\telebot-master\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"test\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\r\n      <module name=\"temperature-ops-bot\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/test.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SvnConfiguration\">\r\n    <configuration />\r\n  </component>\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"09fab2e2-bcb4-4c44-8aa4-9ec3b4c7ea10\" name=\"Default Changelist\" comment=\"\" />\r\n      <created>1583162923124</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1583162923124</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"fixed\">\r\n      <created>1586326381427</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1586326381427</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"stuff\">\r\n      <created>1586328168211</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1586328168212</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"stuff\">\r\n      <created>1586515910646</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1586515910646</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"started implementing strings.json\">\r\n      <created>1586526511490</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1586526511490</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"implementing string.json\">\r\n      <created>1586527965334</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1586527965334</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"implementing string.json\">\r\n      <created>1586528202889</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1586528202889</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"implementing string.json\">\r\n      <created>1586532030565</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1586532030565</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"implementing string.json\">\r\n      <created>1586533057159</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1586533057159</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"refactoring a bit\">\r\n      <created>1586860826553</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1586860826553</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"refactoring a bit\">\r\n      <created>1586873755234</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1586873755234</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"refactoring a bit\">\r\n      <created>1586949904907</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1586949904907</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"refactoring a bit\">\r\n      <created>1587015357423</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1587015357423</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"refactoring a bit\">\r\n      <created>1587020636603</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1587020636603</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"refactoring a bit\">\r\n      <created>1587026431421</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1587026431421</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"refactoring a bit\">\r\n      <created>1587026528845</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1587026528845</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"refactoring a bit\">\r\n      <created>1587028090611</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1587028090611</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"refactoring\">\r\n      <created>1587031128900</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1587031128900</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"refactoring\">\r\n      <created>1587036588042</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1587036588042</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"refactoring &amp; strings.json updates\">\r\n      <created>1587054906899</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1587054906899</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"strings.json updates\">\r\n      <created>1587055077237</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1587055077237</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"HTML formatting\">\r\n      <created>1587055617556</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1587055617556</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"finished refactoring (single-thread)\">\r\n      <created>1587105952354</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1587105952354</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00023\" summary=\"property indexing\">\r\n      <created>1587107427310</created>\r\n      <option name=\"number\" value=\"00023\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1587107427310</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00024\" summary=\"final changes for V1.2\">\r\n      <created>1587111223639</created>\r\n      <option name=\"number\" value=\"00024\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1587111223639</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00025\" summary=\"final changes for V1.2\">\r\n      <created>1587120535177</created>\r\n      <option name=\"number\" value=\"00025\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1587120535177</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00026\" summary=\"python3 rewrite\">\r\n      <created>1587121089645</created>\r\n      <option name=\"number\" value=\"00026\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1587121089645</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00027\" summary=\"python3 rewrite\">\r\n      <created>1587139066573</created>\r\n      <option name=\"number\" value=\"00027\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1587139066573</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00028\" summary=\"python3 rewrite\">\r\n      <created>1587139114774</created>\r\n      <option name=\"number\" value=\"00028\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00028\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1587139114774</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00029\" summary=\"python3 rewrite\">\r\n      <created>1587145766603</created>\r\n      <option name=\"number\" value=\"00029\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00029\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1587145766603</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00030\" summary=\"strings.json updates\">\r\n      <created>1587198982325</created>\r\n      <option name=\"number\" value=\"00030\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00030\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1587198982325</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00031\" summary=\"strings.json updates\">\r\n      <created>1587200582855</created>\r\n      <option name=\"number\" value=\"00031\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00031\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1587200582855</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00032\" summary=\"strings.json updates\">\r\n      <created>1587203612992</created>\r\n      <option name=\"number\" value=\"00032\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00032\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1587203612992</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00033\" summary=\"strings.json updates\">\r\n      <created>1587210196663</created>\r\n      <option name=\"number\" value=\"00033\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00033\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1587210196663</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00034\" summary=\"strings.json updates\">\r\n      <created>1587227801699</created>\r\n      <option name=\"number\" value=\"00034\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00034\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1587227801699</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"35\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"CHECK_NEW_TODO\" value=\"false\" />\r\n    <MESSAGE value=\"fixed\" />\r\n    <MESSAGE value=\"stuff\" />\r\n    <MESSAGE value=\"started implementing strings.json\" />\r\n    <MESSAGE value=\"implementing string.json\" />\r\n    <MESSAGE value=\"refactoring a bit\" />\r\n    <MESSAGE value=\"refactoring\" />\r\n    <MESSAGE value=\"refactoring &amp; strings.json updates\" />\r\n    <MESSAGE value=\"HTML formatting\" />\r\n    <MESSAGE value=\"finished refactoring (single-thread)\" />\r\n    <MESSAGE value=\"property indexing\" />\r\n    <MESSAGE value=\"final changes for V1.2\" />\r\n    <MESSAGE value=\"python3 rewrite\" />\r\n    <MESSAGE value=\"strings.json updates\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"strings.json updates\" />\r\n  </component>\r\n  <component name=\"WindowStateProjectService\">\r\n    <state x=\"552\" y=\"178\" key=\"#JSON_Schema_Mappings\" timestamp=\"1587119103569\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state x=\"552\" y=\"178\" key=\"#JSON_Schema_Mappings/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1587119103569\" />\r\n    <state x=\"144\" y=\"0\" key=\"#com.intellij.execution.impl.EditConfigurationsDialog\" timestamp=\"1587014989546\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state x=\"96\" y=\"0\" key=\"#com.intellij.execution.impl.EditConfigurationsDialog/0.0.1280.680@0.0.1280.680\" timestamp=\"1586325103148\" />\r\n    <state x=\"144\" y=\"0\" key=\"#com.intellij.execution.impl.EditConfigurationsDialog/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1587014989546\" />\r\n    <state x=\"637\" y=\"70\" key=\"CommitChangelistDialog2\" timestamp=\"1587227801218\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state x=\"293\" y=\"0\" key=\"CommitChangelistDialog2/0.0.1280.680@0.0.1280.680\" timestamp=\"1586949903575\" />\r\n    <state x=\"637\" y=\"70\" key=\"CommitChangelistDialog2/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1587227801218\" />\r\n    <state x=\"686\" y=\"243\" key=\"FileChooserDialogImpl\" timestamp=\"1587030874011\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state x=\"458\" y=\"159\" key=\"FileChooserDialogImpl/0.0.1280.680@0.0.1280.680\" timestamp=\"1587012404495\" />\r\n    <state x=\"549\" y=\"215\" key=\"FileChooserDialogImpl/0.0.1536.920@0.0.1536.920\" timestamp=\"1586131993614\" />\r\n    <state x=\"686\" y=\"243\" key=\"FileChooserDialogImpl/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1587030874011\" />\r\n    <state width=\"1899\" height=\"202\" key=\"GridCell.Tab.0.bottom\" timestamp=\"1587227725791\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state width=\"1899\" height=\"202\" key=\"GridCell.Tab.0.bottom/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1587227725791\" />\r\n    <state width=\"1899\" height=\"202\" key=\"GridCell.Tab.0.center\" timestamp=\"1587227725791\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state width=\"1899\" height=\"202\" key=\"GridCell.Tab.0.center/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1587227725791\" />\r\n    <state width=\"1899\" height=\"202\" key=\"GridCell.Tab.0.left\" timestamp=\"1587227725791\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state width=\"1899\" height=\"202\" key=\"GridCell.Tab.0.left/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1587227725791\" />\r\n    <state width=\"1899\" height=\"202\" key=\"GridCell.Tab.0.right\" timestamp=\"1587227725791\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state width=\"1899\" height=\"202\" key=\"GridCell.Tab.0.right/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1587227725791\" />\r\n    <state width=\"1899\" height=\"348\" key=\"GridCell.Tab.1.bottom\" timestamp=\"1587226199712\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state width=\"1899\" height=\"348\" key=\"GridCell.Tab.1.bottom/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1587226199712\" />\r\n    <state width=\"1899\" height=\"348\" key=\"GridCell.Tab.1.center\" timestamp=\"1587226199711\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state width=\"1899\" height=\"348\" key=\"GridCell.Tab.1.center/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1587226199711\" />\r\n    <state width=\"1899\" height=\"348\" key=\"GridCell.Tab.1.left\" timestamp=\"1587226199711\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state width=\"1899\" height=\"348\" key=\"GridCell.Tab.1.left/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1587226199711\" />\r\n    <state width=\"1899\" height=\"348\" key=\"GridCell.Tab.1.right\" timestamp=\"1587226199712\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state width=\"1899\" height=\"348\" key=\"GridCell.Tab.1.right/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1587226199712\" />\r\n    <state x=\"759\" y=\"231\" key=\"RollbackChangesDialog\" timestamp=\"1586596050550\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state x=\"759\" y=\"231\" key=\"RollbackChangesDialog/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1586596050550\" />\r\n    <state x=\"347\" y=\"0\" key=\"SettingsEditor\" timestamp=\"1587014814895\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state x=\"231\" y=\"0\" key=\"SettingsEditor/0.0.1280.680@0.0.1280.680\" timestamp=\"1586949754674\" />\r\n    <state x=\"277\" y=\"103\" key=\"SettingsEditor/0.0.1536.920@0.0.1536.920\" timestamp=\"1583163159025\" />\r\n    <state x=\"347\" y=\"0\" key=\"SettingsEditor/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1587014814895\" />\r\n    <state x=\"769\" y=\"437\" key=\"com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2\" timestamp=\"1586596042238\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state x=\"769\" y=\"437\" key=\"com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1586596042238\" />\r\n    <state x=\"539\" y=\"220\" width=\"840\" height=\"767\" key=\"search.everywhere.popup\" timestamp=\"1587042577676\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state x=\"431\" y=\"195\" width=\"672\" height=\"678\" key=\"search.everywhere.popup/0.0.1536.920@0.0.1536.920\" timestamp=\"1583449645634\" />\r\n    <state x=\"539\" y=\"220\" width=\"840\" height=\"767\" key=\"search.everywhere.popup/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1587042577676\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\r\n          <url>file://$PROJECT_DIR$/main.py</url>\r\n          <option name=\"timeStamp\" value=\"1\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n      <default-breakpoints>\r\n        <breakpoint suspend=\"NONE\" type=\"python-exception\">\r\n          <properties exception=\"BaseException\" />\r\n        </breakpoint>\r\n      </default-breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/workspace.xml	(revision e2348bce6e6e4f78c0854f83721399dbd10da048)
+++ .idea/workspace.xml	(date 1587230286148)
@@ -21,6 +21,7 @@
   <component name="ChangeListManager">
     <list default="true" id="09fab2e2-bcb4-4c44-8aa4-9ec3b4c7ea10" name="Default Changelist" comment="">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/cron.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/cron.yaml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/main.py" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/strings.json" beforeDir="false" afterPath="$PROJECT_DIR$/strings.json" afterDir="false" />
     </list>
@@ -336,7 +337,14 @@
       <option name="project" value="LOCAL" />
       <updated>1587227801699</updated>
     </task>
-    <option name="localTasksCounter" value="35" />
+    <task id="LOCAL-00035" summary="final changes for py3 re-write">
+      <created>1587228600940</created>
+      <option name="number" value="00035" />
+      <option name="presentableId" value="LOCAL-00035" />
+      <option name="project" value="LOCAL" />
+      <updated>1587228600940</updated>
+    </task>
+    <option name="localTasksCounter" value="36" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -366,7 +374,8 @@
     <MESSAGE value="final changes for V1.2" />
     <MESSAGE value="python3 rewrite" />
     <MESSAGE value="strings.json updates" />
-    <option name="LAST_COMMIT_MESSAGE" value="strings.json updates" />
+    <MESSAGE value="final changes for py3 re-write" />
+    <option name="LAST_COMMIT_MESSAGE" value="final changes for py3 re-write" />
   </component>
   <component name="WindowStateProjectService">
     <state x="552" y="178" key="#JSON_Schema_Mappings" timestamp="1587119103569">
@@ -378,33 +387,33 @@
     </state>
     <state x="96" y="0" key="#com.intellij.execution.impl.EditConfigurationsDialog/0.0.1280.680@0.0.1280.680" timestamp="1586325103148" />
     <state x="144" y="0" key="#com.intellij.execution.impl.EditConfigurationsDialog/0.0.1920.1040@0.0.1920.1040" timestamp="1587014989546" />
-    <state x="637" y="70" key="CommitChangelistDialog2" timestamp="1587227801218">
+    <state x="637" y="70" key="CommitChangelistDialog2" timestamp="1587228600261">
       <screen x="0" y="0" width="1920" height="1040" />
     </state>
     <state x="293" y="0" key="CommitChangelistDialog2/0.0.1280.680@0.0.1280.680" timestamp="1586949903575" />
-    <state x="637" y="70" key="CommitChangelistDialog2/0.0.1920.1040@0.0.1920.1040" timestamp="1587227801218" />
+    <state x="637" y="70" key="CommitChangelistDialog2/0.0.1920.1040@0.0.1920.1040" timestamp="1587228600261" />
     <state x="686" y="243" key="FileChooserDialogImpl" timestamp="1587030874011">
       <screen x="0" y="0" width="1920" height="1040" />
     </state>
     <state x="458" y="159" key="FileChooserDialogImpl/0.0.1280.680@0.0.1280.680" timestamp="1587012404495" />
     <state x="549" y="215" key="FileChooserDialogImpl/0.0.1536.920@0.0.1536.920" timestamp="1586131993614" />
     <state x="686" y="243" key="FileChooserDialogImpl/0.0.1920.1040@0.0.1920.1040" timestamp="1587030874011" />
-    <state width="1899" height="202" key="GridCell.Tab.0.bottom" timestamp="1587227725791">
+    <state width="1899" height="202" key="GridCell.Tab.0.bottom" timestamp="1587230124974">
       <screen x="0" y="0" width="1920" height="1040" />
     </state>
-    <state width="1899" height="202" key="GridCell.Tab.0.bottom/0.0.1920.1040@0.0.1920.1040" timestamp="1587227725791" />
-    <state width="1899" height="202" key="GridCell.Tab.0.center" timestamp="1587227725791">
+    <state width="1899" height="202" key="GridCell.Tab.0.bottom/0.0.1920.1040@0.0.1920.1040" timestamp="1587230124974" />
+    <state width="1899" height="202" key="GridCell.Tab.0.center" timestamp="1587230124974">
       <screen x="0" y="0" width="1920" height="1040" />
     </state>
-    <state width="1899" height="202" key="GridCell.Tab.0.center/0.0.1920.1040@0.0.1920.1040" timestamp="1587227725791" />
-    <state width="1899" height="202" key="GridCell.Tab.0.left" timestamp="1587227725791">
+    <state width="1899" height="202" key="GridCell.Tab.0.center/0.0.1920.1040@0.0.1920.1040" timestamp="1587230124974" />
+    <state width="1899" height="202" key="GridCell.Tab.0.left" timestamp="1587230124974">
       <screen x="0" y="0" width="1920" height="1040" />
     </state>
-    <state width="1899" height="202" key="GridCell.Tab.0.left/0.0.1920.1040@0.0.1920.1040" timestamp="1587227725791" />
-    <state width="1899" height="202" key="GridCell.Tab.0.right" timestamp="1587227725791">
+    <state width="1899" height="202" key="GridCell.Tab.0.left/0.0.1920.1040@0.0.1920.1040" timestamp="1587230124974" />
+    <state width="1899" height="202" key="GridCell.Tab.0.right" timestamp="1587230124974">
       <screen x="0" y="0" width="1920" height="1040" />
     </state>
-    <state width="1899" height="202" key="GridCell.Tab.0.right/0.0.1920.1040@0.0.1920.1040" timestamp="1587227725791" />
+    <state width="1899" height="202" key="GridCell.Tab.0.right/0.0.1920.1040@0.0.1920.1040" timestamp="1587230124974" />
     <state width="1899" height="348" key="GridCell.Tab.1.bottom" timestamp="1587226199712">
       <screen x="0" y="0" width="1920" height="1040" />
     </state>
